.box.tabular
  = f.hidden_field :assigned_to_id
  = f.hidden_field :start_date
  = f.hidden_field :due_date
  = f.hidden_field :tracker_id
  = f.hidden_field :description
  = f.hidden_field :meeting_container_id
  = f.hidden_field :meeting_container_type
  = f.hidden_field :status_id
  = f.hidden_field :priority_id
  %p
    = f.select :project_id, project_tree_options_for_select(Project.active.visible.where('id <> ?', Setting.plugin_redmine_meeting[:project_id]), selected: @object.project), prompt: t(:prompt_please_select), required: true
  %p
    = f.text_field :subject, size: 80, maxlength: 255, required: true, style: "width: 95%"
  %p
    = f.select :author_id, options_from_collection_for_select(@object.meeting_protocol.users, :id, :name, User.current.id), prompt: false, required: true
  %p
    = f.label :parent_issue_id
    = f.text_field :parent_issue_id, size: 10, class: "autocomplete_for_issue"
  %p
    = f.text_field :estimated_hours, size: 10, required: true

  %fieldset.collapsible.collapsed
    %legend{onclick: "toggleFieldset(this);"}
      = l(:label_issue_watchers)
    %div{style: "display: none;"}
      %p#watchers_form
        %span#watchers_inputs
          = watchers_checkboxes(@issue, User.active.sorted, false)
  -#%p#watchers_form
    %label= l(:label_issue_watchers)
    %span#watchers_inputs
      = watchers_checkboxes(@issue, User.active.sorted)

:javascript
  $('.autocomplete_for_issue:not(.autocomplete)').each( function(index){
    observeAutocompleteField( $(this).attr('id'), '#{escape_javascript autocomplete_for_issue_meeting_agendas_path}')
  } );
