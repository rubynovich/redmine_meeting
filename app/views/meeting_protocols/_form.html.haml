- content_for(:header_tags) do
  = javascript_include_tag :jquery_nested_form, plugin: 'redmine_meeting'

= f.hidden_field :meeting_agenda_id
= error_messages_for @object
= back_url_hidden_field_tag
- heads_for_wiki_formatter
- include_calendar_headers_tags

.box.tabular
  %fieldset
    .splitcontentleft
      %p
        = f.label :start_time, l(:label_meeting_protocol_start_time), class: 'necessary'
        = f.time_select :start_time, minute_step: 5, include_blank: true
      %p
        = f.label :end_time, l(:label_meeting_protocol_end_time), class: 'necessary'
        = f.time_select :end_time, minute_step: 5, include_blank: true
    .splitcontentright
      %p.user_id
        = f.label :asserter, class: 'necessary'
        = f.collection_select :asserter_id, User.active.sorted, :id, :name, prompt: t(:prompt_please_select)
      -#
        %p.contact_id
          = f.label :external_asserter, t(:field_asserter), class: 'necessary'
          = f.collection_select :external_asserter_id, Contact.visible.people.order_by_name, :id, :name, prompt: t(:prompt_please_select)
          - project = Project.find(Setting[:plugin_redmine_contacts][:project_id]) rescue nil
          = link_to l(:label_contact_new), {controller: 'contacts', action: 'new', project_id: project}, class: 'icon icon-add'

        %p
          = f.label :asserter_id_is_contact, t(:label_meeting_agenda_asserter_is_contact)
          = f.check_box :asserter_id_is_contact, class: 'user_id_is_contact', onclick: 'toggleReporterType(this);'
      %p
        = f.label :meeting_company, class: 'necessary'
        = f.collection_select :meeting_company_id, MeetingCompany.sorted, :id, :name, prompt: t(:prompt_please_select)


  %h3{style: "margin-top: 33px"}=l :label_meeting_answer_plural
  = f.fields_for :meeting_answers
  = f.link_to_add l(:button_add), :meeting_answers, class: 'icon icon-add'

  %h3{style: "margin-top: 33px"}=l :label_meeting_extra_answer_plural
  = f.fields_for :meeting_extra_answers
  = f.link_to_add l(:button_add), :meeting_extra_answers, class: 'icon icon-add'

  %fieldset
    %legend= l(:label_attachment_plural)
    = link_to_attachments @object if @object.attachments.any?
    %p= render partial: 'attachments/form', locals: {container: @object}

  :javascript
    function toggleReporterType(element) {
      var contacts = $(element).parent().parent().find('.contact_id');
      var users = $(element).parent().parent().find('.user_id');
      if (element.checked) {
        contacts.show();
        users.hide();
      } else {
        contacts.hide();
        users.show();
      }
    }

    $(function() {
      $('.wiki-edit').each( function(index){
        var wikiToolbar = new jsToolBar(this);
        wikiToolbar.setHelpLink('#{escape_javascript Redmine::Utils.relative_url_root+"/help/wiki_syntax.html"}');
        wikiToolbar.draw();
      } );
      $('.autocomplete_for_issue:not(.autocomplete)').each( function(index){
        observeAutocompleteField( $(this).attr('id'), '#{escape_javascript autocomplete_for_issue_meeting_agendas_path}')
      } );
      $('.datepickme').each( function(index){
        $(this).datepicker(datepickerOptions);
      } );
      $('.necessary:not(.starred)').each( function(){
        $(this).addClass('starred').append('<span class="required"> *</span>');
      });

      $(document).on('nested:fieldAdded', function() {
        $('.wiki-edit:not(.jstEditor > .wiki-edit)').each( function(index){
          var wikiToolbar = new jsToolBar(this);
          wikiToolbar.setHelpLink('#{escape_javascript Redmine::Utils.relative_url_root+"/help/wiki_syntax.html"}');
          wikiToolbar.draw();
        } );
        $('.autocomplete_for_issue:not(.autocomplete)').each( function(index){
          observeAutocompleteField( $(this).attr('id'), '#{escape_javascript autocomplete_for_issue_meeting_agendas_path}')
        } );
        $('.datepickme').each( function(index){
          $(this).datepicker(datepickerOptions);
        } );
        $('.necessary:not(.starred)').each( function(){
          $(this).addClass('starred').append('<span class="required"> *</span>');
        });
        $('.user_id_is_contact').each( function() {
          toggleReporterType(this);
        });
      });
      $('.user_id_is_contact').each( function() {
        toggleReporterType(this);
      });
    });
