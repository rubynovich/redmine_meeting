%br
%h3=l(:label_meeting_answer_plural)+":"
- meeting_answers.group_by(&:project).sort_by{ |project, answers| project.to_s }.each do |project, answers|
  %h4{align: 'center'}
    - if project.present?
      = link_to_project project
    - else
      = t(:label_without_project)
  - answers.each do |answer|
    .autoscroll.issue.details
      %table.attributes
        %tr
          %th= t(:label_meeting_question)+":"
          %td= h answer.meeting_question
          %th= t(:label_meeting_question_issue)+":"
          %td= render partial: 'meeting_bind_issues/show', locals: {answer: answer}
        %tr
          %th= t(:label_meeting_question_user)+":"
          %td= link_to_reporter(answer)
          %th= t(:field_start_date)+":"
          %td= format_date(answer.start_date)
        %tr
          %th= t(:label_meeting_answer_user)+":"
          %td= link_to_assigned_to(answer)
          %th= t(:field_due_date)+":"
          %td= format_date(answer.due_date)
      %p
        %strong=t(:label_meeting_answer)+":"
        %br
        %div{style: 'margin-left: 40px;'}
          =textilizable(answer, :description)
      - unless answer.user_id_is_contact?
        - if answer.issue_id.present?
          .show-when-print
            %p
              %strong=t(:label_meeting_answer_issue)+":"
              %br
              %div{style: 'margin-left: 40px;'}
                = link_to answer.issue, project: false
                = "(#{t(answer.issue_type || 'new', scope: :label_meeting_issue_type_statuses)})"
        .hide-when-print
          = render partial: 'meeting_issues/show', locals: {answer: answer}

      .hide-when-print
        - if can_show_comments?(@object) #FIXME
          %h4= l(:label_meeting_answer_comment_plural)+":"
          = render partial: 'meeting_comments/history', locals: {meeting_container: answer}
